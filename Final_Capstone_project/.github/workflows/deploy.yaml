name: capstone_pipeline

on:
  push:
    branches:
      - master

permissions:
      id-token: write
      contents: read


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

    # clone the repo
    - name: Checkout code
      uses: actions/checkout@v3

    # login to azure
    - name: Azure login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
    # describe azure account
    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          az account show


    # install kubectl
    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0'
      id: install

    # install terraform
    - name: install terraform cli
      uses: hashicorp/setup-terraform@v3

    # tf init
    - name: Terraform Init
      run: |
        cd infrastructure
        terraform init

    # tf plan
    - name: Terraform Plan
      id: plan
      run: |
        cd infrastructure
        terraform plan -no-color

    # tf apply
    - name: Terraform apply
      id: apply
      run: |
        cd infrastructure
        terraform apply --auto-approve -no-color

    # update the kubeconfig
    - name: update-kubeconfig
      run: az aks get-credentials --resource-group capstone_rg --name uneku-capstone-k8s --overwrite-existing

    # deploy sock-shop manifest file
    - name: Deploy to Aks
      run: |
        cd src
        kubectl apply -f sockshop.yaml
        kubectl apply -f ingress.yaml
    
    # create ArgoCD cluster
    - name: Install ArgoCD
      run: |
        kubectl create namespace argocd
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml


    # - name: Setup ArgoCD CLI 
    #   uses: imajeetyadav/argocd-cli@v1
    #   with:
    #     version: v2.5.7

    # # # Deploy with ArgoCD
    # # - name: Deploy with ArgoCD
    # #   run: |
    # #     argocd login <ARGOCD_SERVER> --insecure --username <ARGOCD_USERNAME> --password <ARGOCD_PASSWORD>
    # #     argocd app create myapp --repo https://github.com/your/repo.git --path /path/to/manifests --dest-server https://kubernetes.default.svc --dest-namespace default
    # #     argocd app sync myapp
